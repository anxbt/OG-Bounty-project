"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LedgerManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'InsufficientBalance',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: 'serviceType',
                type: 'string',
            },
        ],
        name: 'InvalidServiceType',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'LedgerExists',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'LedgerNotExists',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'requested',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maximum',
                type: 'uint256',
            },
        ],
        name: 'TooManyProviders',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'MAX_PROVIDERS_PER_BATCH',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256[2]',
                name: 'inferenceSigner',
                type: 'uint256[2]',
            },
            {
                internalType: 'string',
                name: 'additionalInfo',
                type: 'string',
            },
        ],
        name: 'addLedger',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'deleteLedger',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'depositFund',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'fineTuningAddress',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'offset',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'limit',
                type: 'uint256',
            },
        ],
        name: 'getAllLedgers',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'user',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'availableBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'totalBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256[2]',
                        name: 'inferenceSigner',
                        type: 'uint256[2]',
                    },
                    {
                        internalType: 'string',
                        name: 'additionalInfo',
                        type: 'string',
                    },
                    {
                        internalType: 'address[]',
                        name: 'inferenceProviders',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'fineTuningProviders',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct Ledger[]',
                name: 'ledgers',
                type: 'tuple[]',
            },
            {
                internalType: 'uint256',
                name: 'total',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'getLedger',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'user',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'availableBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'totalBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256[2]',
                        name: 'inferenceSigner',
                        type: 'uint256[2]',
                    },
                    {
                        internalType: 'string',
                        name: 'additionalInfo',
                        type: 'string',
                    },
                    {
                        internalType: 'address[]',
                        name: 'inferenceProviders',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'fineTuningProviders',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct Ledger',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'inferenceAddress',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_inferenceAddress',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_fineTuningAddress',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'initialized',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'refund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'providers',
                type: 'address[]',
            },
            {
                internalType: 'string',
                name: 'serviceType',
                type: 'string',
            },
        ],
        name: 'retrieveFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'spendFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'provider',
                type: 'address',
            },
            {
                internalType: 'string',
                name: 'serviceTypeStr',
                type: 'string',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
];
const _bytecode = '0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612704806100826000396000f3fe6080604052600436106101025760003560e01c80638d0d8cb611610095578063c0c53b8b11610064578063c0c53b8b146102a7578063dd8a4118146102c7578063e5d9fdab146102e7578063f2fde38b14610307578063f7cd6af91461032757600080fd5b80638d0d8cb6146102305780638da5cb5b146102385780639449fe1714610256578063987086f01461027957600080fd5b8063382e1112116100d1578063382e1112146101a6578063410b3815146101de578063715018a6146101f357806372adc0d91461020857600080fd5b8063158ef93e1461010e578063278ecde1146101445780632ba43b821461016657806331404a191461018657600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060005461012f90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561015057600080fd5b5061016461015f366004611e68565b610354565b005b34801561017257600080fd5b50610164610181366004611f54565b610463565b34801561019257600080fd5b506101646101a1366004611fab565b610818565b3480156101b257600080fd5b506003546101c6906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b3480156101ea57600080fd5b50610164610a55565b3480156101ff57600080fd5b50610164610ece565b61021b61021636600461207a565b610ee0565b6040805192835260208301919091520161013b565b610164610f9e565b34801561024457600080fd5b506000546001600160a01b03166101c6565b34801561026257600080fd5b5061026b601481565b60405190815260200161013b565b34801561028557600080fd5b506102996102943660046120c3565b61104e565b60405161013b92919061221f565b3480156102b357600080fd5b506101646102c2366004612288565b611332565b3480156102d357600080fd5b506101646102e23660046122cb565b6113fc565b3480156102f357600080fd5b506002546101c6906001600160a01b031681565b34801561031357600080fd5b506101646103223660046122f5565b61150c565b34801561033357600080fd5b506103476103423660046122f5565b611585565b60405161013b9190612310565b33600061036082611754565b60008181526007602052604090205490915060ff161561039b5760405162461bcd60e51b815260040161039290612323565b60405180910390fd5b6000818152600760205260408120805460ff191660011790556103bd33611788565b905083816001015410156103e65760405163112fed8b60e31b8152336004820152602401610392565b838160010160008282546103fa9190612370565b92505081905550838160020160008282546104159190612370565b9091555050604051339085156108fc029086906000818181858888f19350505050158015610447573d6000803e3d6000fd5b50506000908152600760205260409020805460ff191690555050565b33600061046f82611754565b60008181526007602052604090205490915060ff16156104a15760405162461bcd60e51b815260040161039290612323565b6000818152600760205260408120805460ff191660011790556104c333611788565b905060008060006104d3886117db565b60405163147500e360e01b81523360048201526001600160a01b038d81166024830152939650919450925088916060919085169063147500e390604401602060405180830381865afa15801561052d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105519190612383565b1561063d57604051631320b9eb60e11b81523360048201526001600160a01b038c811660248301526000919086169063264173d690604401602060405180830381865afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca91906123ac565b905060006105d88b836118b8565b90506105e48185612370565b6040513360248201526001600160a01b038f1660448201526064810183905290945060840160408051601f198184030181529190526020810180516001600160e01b031663745e87f760e01b17905292506106e1915050565b821561069157338b8760030188600501604051602401610660949392919061247c565b60408051601f198184030181529190526020810180516001600160e01b03166312f0ebfd60e21b17905290506106d6565b338b876005016040516024016106a9939291906124de565b60408051601f198184030181529190526020810180516001600160e01b031663e50688f960e01b17905290505b6106e1338c856118d2565b818660010154101561072c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610392565b818660010160008282546107409190612370565b925050819055506000856001600160a01b03168383604051610762919061250a565b60006040518083038185875af1925050503d806000811461079f576040519150601f19603f3d011682016040523d82523d6000602084013e6107a4565b606091505b50509050806107f55760405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f206368696c6420636f6e7472616374206661696c65640000006044820152606401610392565b505050600094855250506007602052505060409020805460ff1916905550505050565b33600061082482611754565b60008181526007602052604090205490915060ff16156108565760405162461bcd60e51b815260040161039290612323565b6000818152600760205260409020805460ff1916600117905583516014101561089f57835160405163414f261960e11b8152600481019190915260146024820152604401610392565b60006108aa846117db565b5091505060006108b933611788565b90506000805b8751811015610a1d576000846001600160a01b0316634e3c4f22338b85815181106108ec576108ec612526565b60200260200101516040518363ffffffff1660e01b81526004016109269291906001600160a01b0392831681529116602082015260400190565b6060604051808303816000875af1158015610945573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610969919061253c565b505090508083610979919061256a565b9250846001600160a01b0316636c79158d338b858151811061099d5761099d612526565b60200260200101516040518363ffffffff1660e01b81526004016109d79291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b1580156109f157600080fd5b505af1158015610a05573d6000803e3d6000fd5b50505050508080610a159061257d565b9150506108bf565b5080826001016000828254610a32919061256a565b90915550505060009283525050600760205260409020805460ff19169055505050565b610a5d6119ab565b336000610a6982611754565b60008181526007602052604090205490915060ff1615610a9b5760405162461bcd60e51b815260040161039290612323565b6000818152600760205260408120805460ff19166001179055610abd33611754565b336000908152600860205260408120919250610ad882611a04565b67ffffffffffffffff811115610af057610af0611e9d565b604051908082528060200260200182016040528015610b19578160200160208202803683370190505b50905060005b610b2883611a04565b811015610b7557610b398382611a0e565b828281518110610b4b57610b4b612526565b6001600160a01b039092166020928302919091019091015280610b6d8161257d565b915050610b1f565b5060005b8151811015610c7157600b5482516001600160a01b03909116906397216725903390859085908110610bad57610bad612526565b60200260200101516040518363ffffffff1660e01b8152600401610be79291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610c0157600080fd5b505af1925050508015610c12575060015b610c4857610c42828281518110610c2b57610c2b612526565b602002602001015184611a1a90919063ffffffff16565b50610c5f565b610c5d828281518110610c2b57610c2b612526565b505b80610c698161257d565b915050610b79565b5033600090815260096020526040812090610c8b82611a04565b67ffffffffffffffff811115610ca357610ca3611e9d565b604051908082528060200260200182016040528015610ccc578160200160208202803683370190505b50905060005b610cdb83611a04565b811015610d2857610cec8382611a0e565b828281518110610cfe57610cfe612526565b6001600160a01b039092166020928302919091019091015280610d208161257d565b915050610cd2565b5060005b8151811015610e0d57600a5482516001600160a01b03909116906397216725903390859085908110610d6057610d60612526565b60200260200101516040518363ffffffff1660e01b8152600401610d9a9291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610db457600080fd5b505af1925050508015610dc5575060015b610de457610dde828281518110610c2b57610c2b612526565b50610dfb565b610df9828281518110610c2b57610c2b612526565b505b80610e058161257d565b915050610d2c565b506000610e1933611788565b9050610e29600682016000611d53565b610e37600782016000611d53565b610e42600487611a2f565b50600086815260066020526040812080546001600160a01b03191681556001810182905560028101829055600381018290556004810182905590610e8a600583016000611d71565b610e98600683016000611d53565b610ea6600783016000611d53565b50505060009586525050600760205250506040909120805460ff19169055505060018055565b565b610ed6611a3b565b610ecc6000611a95565b600080336000610eef82611754565b60008181526007602052604090205490915060ff1615610f215760405162461bcd60e51b815260040161039290612323565b6000818152600760205260408120805460ff19166001179055610f4333611754565b9050610f4e81611ae5565b15610f6e5760405163cde58aa160e01b8152336004820152602401610392565b610f7b813389348a611af2565b506000908152600760205260408120805460ff1916905534969095509350505050565b336000610faa82611754565b60008181526007602052604090205490915060ff1615610fdc5760405162461bcd60e51b815260040161039290612323565b6000818152600760205260408120805460ff19166001179055610ffe33611788565b905034816001016000828254611014919061256a565b925050819055503481600201600082825461102f919061256a565b9091555050506000908152600760205260409020805460ff1916905550565b6060600061105a611b5c565b905080841061109c576040805160008082526020820190925290611094565b611081611dab565b8152602001906001900390816110795790505b50915061132b565b600083156110bc576110b76110b1858761256a565b836118b8565b6110be565b815b905060006110cc8683612370565b90508067ffffffffffffffff8111156110e7576110e7611e9d565b60405190808252806020026020018201604052801561112057816020015b61110d611dab565b8152602001906001900390816111055790505b50935060005b818110156113275761114061113b828961256a565b611b6d565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b81548152602001906001019080831161118557505050505081526020016005820180546111b1906123c5565b80601f01602080910402602001604051908101604052809291908181526020018280546111dd906123c5565b801561122a5780601f106111ff5761010080835404028352916020019161122a565b820191906000526020600020905b81548152906001019060200180831161120d57829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561128c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161126e575b50505050508152602001600782018054806020026020016040519081016040528092919081815260200182805480156112ee57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116112d0575b50505050508152505085828151811061130957611309612526565b6020026020010181905250808061131f9061257d565b915050611126565b5050505b9250929050565b600054600160a01b900460ff16156113975760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610392565b6000805460ff60a01b1916600160a01b1790556113b381611a95565b50600280546001600160a01b039384166001600160a01b0319918216811790925560038054939094169281168317909355600a80548416909217909155600b8054909216179055565b6003546001600160a01b031633148061141f57506002546001600160a01b031633145b6114875760405162461bcd60e51b815260206004820152603360248201527f43616c6c6572206973206e6f74207468652066696e652074756e696e67206f72604482015272081a5b99995c995b98d94818dbdb9d1c9858dd606a1b6064820152608401610392565b600061149283611788565b905081816001015482600201546114a99190612370565b10156114ee5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610392565b818160020160008282546115029190612370565b9091555050505050565b611514611a3b565b6001600160a01b0381166115795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610392565b61158281611a95565b50565b61158d611dab565b61159682611788565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b8154815260200190600101908083116115db5750505050508152602001600582018054611607906123c5565b80601f0160208091040260200160405190810160405280929190818152602001828054611633906123c5565b80156116805780601f1061165557610100808354040283529160200191611680565b820191906000526020600020905b81548152906001019060200180831161166357829003601f168201915b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156116e257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116c4575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561174457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611726575b5050505050815250509050919050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b60008061179483611754565b905061179f81611ae5565b6117c757604051637d2d536b60e01b81526001600160a01b0384166004820152602401610392565b600090815260066020526040902092915050565b600080600080846040516020016117f2919061250a565b6040516020818303038152906040528051906020012090507f2a52b6261f3850b89541ab4444869004fe552e50532808641800076f8e9ec4658103611850575050600254600b546001600160a01b03918216935016905060016118b1565b7f37f0d1f2303720bab95e3c739b15188d8c19fade32eb63f80ef3d06b64daa9d28103611896575050600354600a546001600160a01b03918216935016905060006118b1565b846040516333a9e39160e11b81526004016103929190612596565b9193909250565b60008183106118c757816118c9565b825b90505b92915050565b6000816118f6576001600160a01b038416600090815260096020526040902061190f565b6001600160a01b03841660009081526008602052604090205b905061191b8184611b90565b6119a5576119298184611bb2565b50600061193585611788565b9050821561197257600681018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0386161790556119a3565b600781018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0386161790555b505b50505050565b6002600154036119fd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610392565b6002600155565b60006118cc825490565b60006118c98383611bc7565b60006118c9836001600160a01b038416611bf1565b60006118c98383611bf1565b6000546001600160a01b03163314610ecc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610392565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006118cc600483611ce4565b600085815260066020526040902060018101839055600280820184905581546001600160a01b0319166001600160a01b038716178255611b389060038301908690611df7565b5060058101611b4783826125f8565b50611b53600487611cfc565b50505050505050565b6000611b686004611a04565b905090565b600080611b7b600484611a0e565b60009081526006602052604090209392505050565b6001600160a01b038116600090815260018301602052604081205415156118c9565b60006118c9836001600160a01b038416611d04565b6000826000018281548110611bde57611bde612526565b9060005260206000200154905092915050565b60008181526001830160205260408120548015611cda576000611c15600183612370565b8554909150600090611c2990600190612370565b9050818114611c8e576000866000018281548110611c4957611c49612526565b9060005260206000200154905080876000018481548110611c6c57611c6c612526565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611c9f57611c9f6126b8565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506118cc565b60009150506118cc565b600081815260018301602052604081205415156118c9565b60006118c983835b6000818152600183016020526040812054611d4b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556118cc565b5060006118cc565b50805460008255906000526020600020908101906115829190611e35565b508054611d7d906123c5565b6000825580601f10611d8d575050565b601f0160209004906000526020600020908101906115829190611e35565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001611ddc611e4a565b81526020016060815260200160608152602001606081525090565b8260028101928215611e25579160200282015b82811115611e25578235825591602001919060010190611e0a565b50611e31929150611e35565b5090565b5b80821115611e315760008155600101611e36565b60405180604001604052806002906020820280368337509192915050565b600060208284031215611e7a57600080fd5b5035919050565b80356001600160a01b0381168114611e9857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611edc57611edc611e9d565b604052919050565b600082601f830112611ef557600080fd5b813567ffffffffffffffff811115611f0f57611f0f611e9d565b611f22601f8201601f1916602001611eb3565b818152846020838601011115611f3757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611f6957600080fd5b611f7284611e81565b9250602084013567ffffffffffffffff811115611f8e57600080fd5b611f9a86828701611ee4565b925050604084013590509250925092565b60008060408385031215611fbe57600080fd5b823567ffffffffffffffff80821115611fd657600080fd5b818501915085601f830112611fea57600080fd5b8135602082821115611ffe57611ffe611e9d565b8160051b61200d828201611eb3565b928352848101820192828101908a85111561202757600080fd5b958301955b8487101561204c5761203d87611e81565b8252958301959083019061202c565b975050508601359250508082111561206357600080fd5b5061207085828601611ee4565b9150509250929050565b6000806060838503121561208d57600080fd5b604083018481111561209e57600080fd5b8392503567ffffffffffffffff8111156120b757600080fd5b61207085828601611ee4565b600080604083850312156120d657600080fd5b50508035926020909101359150565b60005b838110156121005781810151838201526020016120e8565b50506000910152565b600081518084526121218160208601602086016120e5565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561216e5781516001600160a01b031687529582019590820190600101612149565b509495945050505050565b600061010060018060a01b038351168452602080840151818601526040840151604086015260608401516060860160005b60028110156121c7578251825291830191908301906001016121aa565b5050505060808301518160a08601526121e282860182612109565b91505060a083015184820360c08601526121fc8282612135565b91505060c083015184820360e08601526122168282612135565b95945050505050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561227657605f19888703018552612264868351612179565b95509382019390820190600101612248565b50509490940194909452949350505050565b60008060006060848603121561229d57600080fd5b6122a684611e81565b92506122b460208501611e81565b91506122c260408501611e81565b90509250925092565b600080604083850312156122de57600080fd5b6122e783611e81565b946020939093013593505050565b60006020828403121561230757600080fd5b6118c982611e81565b6020815260006118c96020830184612179565b6020808252601b908201527f4c6564676572206c6f636b656420666f72206f7065726174696f6e0000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156118cc576118cc61235a565b60006020828403121561239557600080fd5b815180151581146123a557600080fd5b9392505050565b6000602082840312156123be57600080fd5b5051919050565b600181811c908216806123d957607f821691505b6020821081036123f957634e487b7160e01b600052602260045260246000fd5b50919050565b6000815461240c816123c5565b808552602060018381168015612429576001811461244357612471565b60ff1985168884015283151560051b880183019550612471565b866000528260002060005b858110156124695781548a820186015290830190840161244e565b890184019650505b505050505092915050565b6001600160a01b0385811682528416602080830191909152600090604083019085835b60028110156124bc5781548452928201926001918201910161249f565b5050505060a060808301526124d460a08301846123ff565b9695505050505050565b6001600160a01b03848116825283166020820152606060408201819052600090612216908301846123ff565b6000825161251c8184602087016120e5565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b60008060006060848603121561255157600080fd5b8351925060208401519150604084015190509250925092565b808201808211156118cc576118cc61235a565b60006001820161258f5761258f61235a565b5060010190565b6020815260006118c96020830184612109565b601f8211156125f357600081815260208120601f850160051c810160208610156125d05750805b601f850160051c820191505b818110156125ef578281556001016125dc565b5050505b505050565b815167ffffffffffffffff81111561261257612612611e9d565b6126268161262084546123c5565b846125a9565b602080601f83116001811461265b57600084156126435750858301515b600019600386901b1c1916600185901b1785556125ef565b600085815260208120601f198616915b8281101561268a5788860151825594840194600190910190840161266b565b50858210156126a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c51216057496459ce22b941e83c127cebf0886dcf29fac0d6f3864ecac8a574464736f6c63430008140033';
const isSuperArgs = (xs) => xs.length > 1;
class LedgerManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.LedgerManager__factory = LedgerManager__factory;
//# sourceMappingURL=LedgerManager__factory.js.map